{"version":3,"sources":["Events.js","Factories.js","components/LoginForm.js","components/sidebar/SidebarOption.js","components/sidebar/SideBar.js","components/chats/ChatHeading.js","components/messages/Messages.js","components/messages/MessageInput.js","components/chats/ChatContainer.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","COMMUNITY_CHAT","USER_CONNECTED","MESSAGE_RECEIVED","MESSAGE_SENT","USER_DISCONNECTED","TYPING","VERIFY_USER","LOGOUT","PRIVATE_MESSAGE","uuid","require","v4","createChatNameFromUsers","users","excludedUser","filter","u","join","getTime","date","getHours","getMinutes","slice","createUser","name","socketId","id","createChat","messages","isCommunity","typingUsers","createMessage","message","sender","time","Date","now","LoginForm","state","nickname","error","setUser","user","isUser","console","log","setError","setState","props","err","handleChange","e","preventDefault","target","value","handleSubmit","socket","emit","this","className","onSubmit","htmlFor","ref","input","textInput","type","placeholder","onChange","React","Component","SideBarOption","active","lastMessage","onClick","toUpperCase","PureComponent","defaultProps","onClock","SideBar","reciever","onSendPrivateMessage","addChatForUser","setActiveSideBar","CHATS","activeSideBar","chats","activeChat","setActiveChat","logout","USERS","refs","map","chat","key","get","last","differenceBy","title","numberOfUsers","Messages","scrollDown","bind","container","scrollTop","scrollHeight","prevProps","prevState","mes","MessageInput","sendMessage","sendTyping","lastUpdateTime","isTyping","startCheckingTyping","typingInterval","setInterval","stopCheckingTyping","clearInterval","autoComplete","onKeyUp","keyCode","disabled","length","ChatContainer","sendOpenPrivateMessage","receiver","resetChat","addChat","reset","newChats","messageEvent","MESSAGE_RECIEVED","typingEvent","on","updateTypingInChat","addMessageToChat","chatId","push","includes","initSocket","off","values","ChatHeading","Layout","componentDidMount","a","initUser","arr","ind","Math","floor","random","localStorage","setItem","getItem","userData","io","setUser1","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.52f41667.chunk.js","sourcesContent":["module.exports = {\n    COMMUNITY_CHAT:\"COMMUNITY_CHAT\",\n    USER_CONNECTED:\"USER_CONNECTED\",\n    MESSAGE_RECEIVED:\"MESSAGE_RECEIVED\",\n    MESSAGE_SENT:\"MESSAGE_SENT\",\n    USER_DISCONNECTED:\"USER_DISCONNECTED\",\n    TYPING:\"TYPING\",\n    VERIFY_USER:\"VERIFY_USER\",\n    LOGOUT:\"LOGOUT\",\n    PRIVATE_MESSAGE:\"PRIVATE_MESSAGE\"\n}","const { v4: uuid } = require('uuid');\n\nconst createUser = ({ name = '', socketId = null } = {}) => ({ id: uuid(), name, socketId });\n\nconst createMessage = ({ message = '', sender = '' } = {}) => ({\n\tid: uuid(),\n\ttime: getTime(new Date(Date.now())),\n\tmessage,\n\tsender,\n});\n\nconst createChat = ({ messages = [], name = 'Community', users = [], isCommunity = false } = {}) => ({\n\tid: uuid(),\n\tname: isCommunity ? name : createChatNameFromUsers(users),\n\tmessages,\n\tusers,\n\ttypingUsers: [],\n\tisCommunity,\n});\n\nconst createChatNameFromUsers = (users, excludedUser = \"\") => {\n\treturn users.filter(u => u !== excludedUser).join(' & ') || \"Empty Chat\"\n}\n\nconst getTime = (date) => {\n\treturn `${date.getHours()}:${('0' + date.getMinutes()).slice(-2)}`;\n};\n\nmodule.exports = {\n\tcreateUser,\n\tcreateChat,\n\tcreateMessage,\n\tcreateChatNameFromUsers\n};\n","import React from 'react';\nimport { VERIFY_USER } from '../Events';\n\nclass LoginForm extends React.Component {\n\tstate = {\n\t\tnickname: '',\n\t\terror: '',\n    };\n    \n    setUser = ({user, isUser}) => {\n        console.log(user, isUser);\n        if(isUser) {\n            this.setError(\"UserName already taken\")\n        } else {\n            this.setState({error:null})\n            this.props.setUser(user)\n        }\n    }\n\n    setError = (err) => {\n        this.setState({error:err})\n    }\n\n\thandleChange = (e) => {\n\t\te.preventDefault();\n\t\tthis.setState({ nickname: e.target.value });\n\t};\n\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconst { socket } = this.props;\n\t\tconst { nickname } = this.state;\n\t\tsocket.emit(VERIFY_USER, nickname, this.setUser);\n\t};\n\trender() {\n\t\tconst { nickname, error } = this.state;\n\t\treturn (\n\t\t\t<div className=\"login\">\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"login-form\">\n\t\t\t\t\t<label htmlFor=\"nickname\">\n\t\t\t\t\t\t<h2>Got a Nickname?</h2>\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tref={(input) => (this.textInput = input)}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"nickname\"\n\t\t\t\t\t\tvalue={nickname}\n\t\t\t\t\t\tplaceholder=\"Nickname\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"error\">{error ? error : null}</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default LoginForm;\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class SideBarOption extends PureComponent {\n    static propTypes = {\n        name: PropTypes.string.isRequired,\n        lastMessage: PropTypes.string,\n        active: PropTypes.bool,\n        onClick: PropTypes.func\n    }\n    static defaultProps = {\n        lastMessage: \"\",\n        active:false,\n        onClock: () => { }\n    }\n    render() {\n        const { active, lastMessage, name, onClick } = this.props\n        return (\n            <div \n                className={`user ${active ? 'active':''}`}\n                onClick={onClick}\n                >\n                <div className=\"user-photo\">{name[0].toUpperCase()}</div>\n                <div className=\"user-info\">\n                    <div className=\"name\">{name}</div>\n                    <div className=\"last-message\">{lastMessage}</div>\n                </div>\n                \n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { FaChevronDown, FaListUl, FaSearch } from 'react-icons/fa';\nimport { MdEject, MdKeyboardArrowDown, MdMenu } from 'react-icons/md';\nimport SideBarOption from './SidebarOption';\nimport { last, get, differenceBy } from 'lodash';\nimport { createChatNameFromUsers } from '../../Factories';\nexport default class SideBar extends Component {\n\tstatic type = {\n\t\tUSERS: 'users',\n\t\tCHATS: 'chats',\n\t};\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\treciever: '',\n\t\t\tactiveSideBar: SideBar.type.CHATS,\n\t\t};\n\t}\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconst { reciever } = this.state;\n\t\tconst { onSendPrivateMessage } = this.props;\n\n\t\tonSendPrivateMessage(reciever);\n\t\tthis.setState({ reciever: '' });\n\t};\n\n\taddChatForUser = (reciever) => {\n\t\tthis.props.onSendPrivateMessage(reciever);\n\t\tthis.setActiveSideBar(SideBar.type.CHATS);\n\t};\n\tsetActiveSideBar = (type) => {\n\t\tthis.setState({ activeSideBar: type });\n\t};\n\n\trender() {\n\t\tconst { chats, activeChat, user, setActiveChat, logout, users } = this.props;\n\t\tconst { reciever, activeSideBar } = this.state;\n\t\treturn (\n\t\t\t<div id=\"side-bar\">\n\t\t\t\t<div className=\"heading\">\n\t\t\t\t\t<div className=\"app-name\">\n\t\t\t\t\t\tOur Cool Chat <FaChevronDown />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"menu\">\n\t\t\t\t\t\t<MdMenu />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"search\">\n\t\t\t\t\t<i className=\"search-icon\">\n\t\t\t\t\t\t<FaSearch />\n\t\t\t\t\t</i>\n\t\t\t\t\t<input\n\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={reciever}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tthis.setState({ reciever: e.target.value });\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"plus\"></div>\n\t\t\t\t</form>\n\t\t\t\t<div className=\"side-bar-select\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.setActiveSideBar(SideBar.type.CHATS);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName={`side-bar-select__option ${activeSideBar === SideBar.type.CHATS ? 'active' : ''}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span>Chats</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.setActiveSideBar(SideBar.type.USERS);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName={`side-bar-select__option ${activeSideBar === SideBar.type.USERS ? 'active' : ''}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span>Users</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"users\"\n\t\t\t\t\tref=\"users\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.target === this.refs.user && setActiveChat(null);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{activeSideBar === SideBar.type.CHATS\n\t\t\t\t\t\t? chats.map((chat) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<SideBarOption\n\t\t\t\t\t\t\t\t\t\tkey={chat.id}\n\t\t\t\t\t\t\t\t\t\tlastMessage={get(last(chat.messages), 'message', '')}\n\t\t\t\t\t\t\t\t\t\tname={\n\t\t\t\t\t\t\t\t\t\t\tchat.isCommunity\n\t\t\t\t\t\t\t\t\t\t\t\t? chat.name\n\t\t\t\t\t\t\t\t\t\t\t\t: createChatNameFromUsers(chat.users, user.name)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tactive={activeChat.id === chat.id}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tthis.props.setActiveChat(chat);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t  })\n\t\t\t\t\t\t: differenceBy(users, [user], 'name').map((user) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<SideBarOption\n\t\t\t\t\t\t\t\t\t\tkey={user.id}\n\t\t\t\t\t\t\t\t\t\tname={user.name}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tthis.addChatForUser(user.name);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t  })}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"current-user\">\n\t\t\t\t\t<span>{user.name}</span>\n\t\t\t\t\t<div\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tlogout();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttitle=\"Logout\"\n\t\t\t\t\t\tclassName=\"logout\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<MdEject />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport { FaVideo, FaUserPlus } from 'react-icons/fa';\nimport { MdMenu } from 'react-icons/md';\n\nexport default function ({ name, numberOfUsers }) {\n\treturn (\n\t\t<div className=\"chat-header\">\n\t\t\t<div className=\"user-info\">\n\t\t\t\t<div className=\"user-name\">{name}</div>\n\t\t\t\t<div className=\"status\">\n\t\t\t\t\t<div className=\"indicator\"></div>\n\t\t\t\t\t<span>{numberOfUsers ? numberOfUsers : null}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"options\">\n\t\t\t\t<FaVideo />\n\t\t\t\t<FaUserPlus />\n\t\t\t\t<MdMenu />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\n\nclass Messages extends React.Component {\n\tconstructor(props) {\n\t  super(props);\n\t\t\n\t\tthis.scrollDown = this.scrollDown.bind(this)\n\t}\n\n\tscrollDown(){\n\t\tconst { container } = this.refs\n\t\tcontainer.scrollTop = container.scrollHeight\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.scrollDown()\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tthis.scrollDown()\n\t}\n\t\n\trender() {\n\t\tconst { messages, user, typingUsers } = this.props\n\t\treturn (\n\t\t\t<div ref='container'\n\t\t\t\tclassName=\"thread-container\">\n\t\t\t\t<div className=\"thread\">\n\t\t\t\t\t{\n\t\t\t\t\t\tmessages.map((mes)=>{\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tkey={mes.id}\n\t\t\t\t\t\t\t\t\tclassName={`message-container ${mes.sender === user.name && 'right'}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"time\">{mes.time}</div>\n\t\t\t\t\t\t\t\t\t<div className=\"data\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"message\">{mes.message}</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"name\">{mes.sender}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\ttypingUsers.map((name)=>{\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={name} className=\"typing-user\">\n\t\t\t\t\t\t\t\t\t{`${name} is typing . . .`}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Messages;","import React from 'react';\n\nclass MessageInput extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tmessage: '',\n\t\t\tisTyping: false,\n\t\t};\n\t}\n\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tthis.sendMessage();\n\t\tthis.setState({ message: '' });\n\t};\n\n\tsendMessage = () => {\n\t\tthis.props.sendMessage(this.state.message);\n\t};\n\n\tcomponentWillUnmount() {\n\t\tthis.stopCheckingTyping();\n\t}\n\n\tsendTyping = () => {\n\t\tthis.lastUpdateTime = Date.now();\n\t\tif (!this.state.isTyping) {\n\t\t\tthis.setState({ isTyping: true });\n\t\t\tthis.props.sendTyping(true);\n\t\t\tthis.startCheckingTyping();\n\t\t}\n\t};\n\n\t/*\n\t *\tstartCheckingTyping\n\t *\tStart an interval that checks if the user is typing.\n\t */\n\tstartCheckingTyping = () => {\n\t\t// console.log('Typing');\n\t\tthis.typingInterval = setInterval(() => {\n\t\t\tif (Date.now() - this.lastUpdateTime > 300) {\n\t\t\t\tthis.setState({ isTyping: false });\n\t\t\t\tthis.stopCheckingTyping();\n\t\t\t}\n\t\t}, 300);\n\t};\n\n\t/*\n\t *\tstopCheckingTyping\n\t *\tStart the interval from checking if the user is typing.\n\t */\n\tstopCheckingTyping = () => {\n\t\t// console.log('Stop Typing');\n\t\tif (this.typingInterval) {\n\t\t\tclearInterval(this.typingInterval);\n\t\t\tthis.props.sendTyping(false);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { message } = this.state;\n\t\treturn (\n\t\t\t<div className=\"message-input\">\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"message-form\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"message\"\n\t\t\t\t\t\tref={'messageinput'}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tvalue={message}\n\t\t\t\t\t\tautoComplete={'off'}\n\t\t\t\t\t\tplaceholder=\"Type something interesting\"\n\t\t\t\t\t\tonKeyUp={(e) => {\n\t\t\t\t\t\t\te.keyCode !== 13 && this.sendTyping();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={({ target }) => {\n\t\t\t\t\t\t\tthis.setState({ message: target.value });\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<button disabled={message.length < 1} type=\"submit\" className=\"send\">\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\tSend{' '}\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MessageInput;\n","import React from 'react';\nimport SideBar from '../sidebar/SideBar';\nimport ChatHeading from './ChatHeading';\nimport Messages from '../messages/Messages';\nimport MessageInput from '../messages/MessageInput';\nimport { COMMUNITY_CHAT, MESSAGE_SENT, MESSAGE_RECIEVED, TYPING, PRIVATE_MESSAGE,USER_CONNECTED, USER_DISCONNECTED } from '../../Events';\nimport { values } from 'lodash'\n\nclass ChatContainer extends React.Component {\n\tstate = {\n\t\tchats: [],\n\t\tusers: [],\n\t\tactiveChat: null,\n\t};\n\n\tcomponentDidMount() {\n\t\tconst { socket } = this.props;\n\t\tthis.initSocket(socket);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconst { socket } = this.props\n\t\tsocket.off(PRIVATE_MESSAGE)\n\t\tsocket.off(USER_CONNECTED)\n\t\tsocket.off(USER_DISCONNECTED)\n\t}\n\n\tinitSocket(socket) {\n\t\tconst { user } = this.props;\n\t\tsocket.emit(COMMUNITY_CHAT, this.resetChat);\n\t\tsocket.on(PRIVATE_MESSAGE, this.addChat);\n\t\tsocket.on('connect', () => {\n\t\t\tsocket.emit(COMMUNITY_CHAT, this.resetChat);\n\t\t});\n\t\t// socket.emit(PRIVATE_MESSAGE,{receiver: 'Mike', sender: user.name})\n\t\tsocket.on(USER_CONNECTED, (users)=>{\n\t\t\tthis.setState({ users: values(users) })\n\t\t})\n\t\tsocket.on(USER_DISCONNECTED, (users)=>{\n\t\t\tthis.setState({ users: values(users) })\t\t\t\n\t\t})\n\t}\n\n\tsendOpenPrivateMessage = (receiver) => {\n\t\tconst { socket, user } = this.props;\n\t\tconst { activeChat } = this.state;\n\t\tsocket.emit(PRIVATE_MESSAGE, { receiver, sender: user.name, activeChat });\n\t};\n\n\tresetChat = (chat) => {\n\t\treturn this.addChat(chat, true);\n\t};\n\n\taddChat = (chat, reset) => {\n\t\tconst { socket } = this.props;\n\t\tconst { chats } = this.state;\n\n\t\tconst newChats = reset ? [chat] : [...chats, chat];\n\t\tthis.setState({ chats: newChats, activeChat: reset ? chat : this.state.activeChat });\n\n\t\tconst messageEvent = `${MESSAGE_RECIEVED}-${chat.id}`;\n\t\tconst typingEvent = `${TYPING}-${chat.id}`;\n\n\t\tsocket.on(typingEvent, this.updateTypingInChat(chat.id));\n\t\tsocket.on(messageEvent, this.addMessageToChat(chat.id));\n\t};\n\n\taddMessageToChat = (chatId) => {\n\t\treturn (message) => {\n\t\t\tconst { chats } = this.state;\n\t\t\tlet newChats = chats.map((chat) => {\n\t\t\t\tif (chat.id === chatId) chat.messages.push(message);\n\t\t\t\treturn chat;\n\t\t\t});\n\n\t\t\tthis.setState({ chats: newChats });\n\t\t};\n\t};\n\n\tupdateTypingInChat = (chatId) => {\n\t\treturn ({ isTyping, user }) => {\n\t\t\tif (user !== this.props.user.name) {\n\t\t\t\tconst { chats } = this.state;\n\n\t\t\t\tlet newChats = chats.map((chat) => {\n\t\t\t\t\tif (chat.id === chatId) {\n\t\t\t\t\t\tif (isTyping && !chat.typingUsers.includes(user)) {\n\t\t\t\t\t\t\tchat.typingUsers.push(user);\n\t\t\t\t\t\t} else if (!isTyping && chat.typingUsers.includes(user)) {\n\t\t\t\t\t\t\tchat.typingUsers = chat.typingUsers.filter((u) => u !== user);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn chat;\n\t\t\t\t});\n\t\t\t\tthis.setState({ chats: newChats });\n\t\t\t}\n\t\t};\n\t};\n\n\tsendMessage = (chatId, message) => {\n\t\tconst { socket } = this.props;\n\t\tsocket.emit(MESSAGE_SENT, { chatId, message });\n\t};\n\n\tsendTyping = (chatId, isTyping) => {\n\t\tconst { socket } = this.props;\n\t\tsocket.emit(TYPING, { chatId, isTyping });\n\t};\n\n\tsetActiveChat = (activeChat) => {\n\t\tthis.setState({ activeChat });\n\t};\n\n\trender() {\n\t\tconst { user, logout } = this.props;\n\t\tconst { chats, activeChat, users } = this.state;\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<SideBar\n\t\t\t\t\tlogout={logout}\n\t\t\t\t\tuser={user}\n\t\t\t\t\tusers={users}\n\t\t\t\t\tchats={chats}\n\t\t\t\t\tactiveChat={activeChat}\n\t\t\t\t\tsetActiveChat={this.setActiveChat}\n\t\t\t\t\tonSendPrivateMessage={this.sendOpenPrivateMessage}\n\t\t\t\t/>\n\t\t\t\t<div className=\"chat-room-container\">\n\t\t\t\t\t{activeChat !== null ? (\n\t\t\t\t\t\t<div className=\"chat-room\">\n\t\t\t\t\t\t\t<ChatHeading name={activeChat.name} />\n\t\t\t\t\t\t\t<Messages messages={activeChat.messages} user={user} typingUsers={activeChat.typingUsers} />\n\t\t\t\t\t\t\t<MessageInput\n\t\t\t\t\t\t\t\tsendMessage={(message) => {\n\t\t\t\t\t\t\t\t\tthis.sendMessage(activeChat.id, message);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tsendTyping={(isTyping) => {\n\t\t\t\t\t\t\t\t\tthis.sendTyping(activeChat.id, isTyping);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"chat-room choose\">\n\t\t\t\t\t\t\t<h3>Choose a chat!</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ChatContainer;\n","import React from 'react';\nimport io from 'socket.io-client';\nimport { VERIFY_USER, USER_CONNECTED, LOGOUT } from '../Events';\nimport LoginForm from './LoginForm';\nimport Chatcontainer from './chats/ChatContainer';\n\nconst socketUrl = '/';\nclass Layout extends React.Component {\n\tstate = {\n\t\tsocket: 'null',\n\t\tuser: '',\n\t};\n\n\tcomponentDidMount = async () => {\n\t\tawait this.initSocket();\n\t\tawait this.initUser();\n\t};\n\n\tinitUser = async () => {\n\t\tconst arr = ['a','b','c','d','e','f','g']\n\t\tconst ind = Math.floor( Math.random() * 7 )\n\t\tlocalStorage.setItem('user', arr[ind]);\n\t\tlet {socket} = this.state;\n\t\tconst userData = await localStorage.getItem('user');\n\t\tawait this.setState({ user: userData });\n\t\tsocket.emit(VERIFY_USER, this.state.user, this.setUser);\n\t\t// await this.setUser(this.state.user)\n\t};\n\n\tinitSocket = () => {\n\t\tconst socket = io(socketUrl);\n\t\tsocket.on('connect', () => {\n\t\t\tconsole.log('Connected');\n\t\t});\n\t\tthis.setState({ socket });\n\t};\n\n\tsetUser1 = (user) => {\n\t\tconst { socket } = this.state;\n\t\tsocket.emit(USER_CONNECTED, user);\n\t\tthis.setState({ user });\n\t};\n\n\tsetUser = ({user, isUser}) => {\n        console.log(user, isUser);\n        if(isUser) {\n\t\t\tthis.setError(\"UserName already taken\")\n        } else {\n            this.setState({error:null})\n            this.setUser1(user)\n        }\n\t}\n\n\tsetError = (err) => {\n        this.setState({error:err})\n    }\n\n\tlogout = () => {\n\t\tconst { socket } = this.state;\n\t\tsocket.emit(LOGOUT);\n\t\tthis.setState({ user: null });\n\t};\n\n\trender() {\n\t\tconst { socket, user } = this.state;\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t{!user ? (\n\t\t\t\t\t<LoginForm socket={socket} setUser={this.setUser} />\n\t\t\t\t) : (\n\t\t\t\t\t<Chatcontainer socket={socket} user={user} logout={this.logout} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Layout;\n","import React from 'react';\nimport Layout from './components/Layout';\nimport './index.css'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Layout title = \"Chat App\"/>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}